@model SherrilynFrondozo.Web.ViewModels.Users.UpdateProfileViewModel
@{
    ViewData["Title"] = "UpdateProfile";
}

<h2>Update Profile</h2>

<form action="~/home/update-profile" method="post">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary()
    <div class="form-group">
        <input type="hidden" asp-for="UserId" />
        <label for="firstName">First Name</label>
        <input type="text" class="form-control" id="firstName" asp-for="FirstName" aria-describedby="firstNameHelp" placeholder="Enter first name">
        <small id="firstNameHelp" class="form-text text-muted">First name is required.</small>
    </div>
    <div class="form-group">
        <label for="lastName">Last Name</label>
        <input type="text" class="form-control" id="lastName" asp-for="LastName" aria-describedby="lastNameHelp" placeholder="Enter last name">
        <small id="lastNameHelp" class="form-text text-muted">Last name is required.</small>
    </div>
    <div class="form-group">
        <label for="gender">Gender</label>
        <select class="form-control" id="gender" asp-for="Gender">
            @{
                var options = Enum.GetValues(typeof(SherrilynFrondozo.Web.Infrastructures.Data.Enums.Gender)).Cast<SherrilynFrondozo.Web.Infrastructures.Data.Enums.Gender>();

                foreach (SherrilynFrondozo.Web.Infrastructures.Data.Enums.Gender option in options)
                {
                    if (Model.Gender == option)
                    {
                        <option value="@option" selected>@option.ToString()</option>
                    }
                    else
                    {
                        <option value="@option">@option.ToString()</option>
                    }
                }
            }
        </select>
        <small id="genderHelp" class="form-text text-muted">Gender is required.</small>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    <a href="~/home" class="btn btn-danger">Cancel</a>
</form>